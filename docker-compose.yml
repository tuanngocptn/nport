services:
  nport-server:
    build:
      context: .
      dockerfile: ./config/server.dockerfile
    image: nport-server:v1
    container_name: nport-server
    ports:
      - "3000:3000"
    volumes:
      - ./src/server:/usr/src/app/src/server
    restart: unless-stopped
    networks:
      - nport-network
    networks:
      nport-network:
        ipv4_address: 192.168.10.3
    entrypoint: npm run server:dev

  nport-nginx:
    image: nginx:1.27.3-perl
    container_name: nport-nginx
    volumes:
      - ./config/nport.local.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
      # - "443:443"
    restart: unless-stopped
    logging:
      driver: none
    networks:
      nport-network:
        ipv4_address: 192.168.10.2

  nport-client:
    build:
      context: .
      dockerfile: ./config/client.dockerfile
    image: nport-client:v1
    container_name: nport-client
    volumes:
      - ./src/client:/usr/src/app/src/client
    restart: unless-stopped
    networks:
      - nport-network
    networks:
      nport-network:
        ipv4_address: 192.168.10.4
    entrypoint: npm run client:dev
    extra_hosts:
      - "nport.local:192.168.10.2"
      - "server.nport.local:192.168.10.2"
      - "myapp.nport.local:192.168.10.2"
    depends_on:
      - nport-nginx
      - nport-server

networks:
  nport-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
